% This file reads the image generated by `Compare_reweighting.m` and create
% cropped versions of all the images.
%
% Vegard Antun, 2019

clear('all') ; close('all');
load('cilib_defaults.mat') % load font size, line width, etc.

path_to_this_file = mfilename('fullpath');
path_to_this_file = path_to_this_file(1:end-length(mfilename)-1);
dest = fullfile(path_to_this_file, 'plots');

% Create destination for the plots
if (exist(dest) ~= 7) 
    mkdir(dest);
end

vm = 4;                                     % Number of vanishing moments
subsampling_rate = 0.25;                    % âˆˆ [0,1]

N = 512;
fname_core = 'brain1';
fname = sprintf('%s_%d.png',fname_core, N);
X = double(imread(fullfile(cil_dflt.data_path, 'MR', fname)));
X = X/255;
cil_dflt.image_format = 'png';

v = 180;
vs = 220;
hs = 260;
idx_v = vs:vs+v-1;
idx_h = hs:hs+v-1;

str_id1 = 'fpower_law_2d_hlines_1';
str_id2 = 'f_exp2';

fname1 = fullfile(dest, sprintf('aFourier_%s_wavelet_srate_%d_db%d_%s.%s',fname_core, 100*subsampling_rate, vm, str_id1, cil_dflt.image_format ));
fname2 = fullfile(dest, sprintf('aFourier_%s_shear_tgv_reweighting_srate_%d_%s.%s',fname_core, 100*subsampling_rate, str_id1, cil_dflt.image_format ));
fname3 = fullfile(dest, sprintf('aFourier_%s_wavelet_srate_%d_db%d_%s.%s',fname_core, 100*subsampling_rate, vm, str_id2, cil_dflt.image_format ));
fname4 = fullfile(dest, sprintf('aFourier_%s_shear_tgv_reweighting_srate_%d_%s.%s',fname_core, 100*subsampling_rate, str_id2, cil_dflt.image_format ));
 
fnames = {fname1, fname2, fname3, fname4}; 
text = {'Wavelet, horiz', 'Shear.+TGV+rew., horiz','Wavelet, gauss', 'Shear.+TGV+rew., gauss'}; 

im = cil_create_crop_image(fnames, text, idx_v, idx_h, cil_dflt.font_size);
fname_out = sprintf('aCrop_%s_srate_%d.%s', fname_core, 100*subsampling_rate, cil_dflt.image_format);
imwrite(im, fullfile(dest, fname_out));

im1 = imread(fname1);
im2 = imread(fname2);
im3 = imread(fname3);
im4 = imread(fname4);

fname1_out = fname1(1:end-length(cil_dflt.image_format)-1);
fname2_out = fname2(1:end-length(cil_dflt.image_format)-1);
fname3_out = fname3(1:end-length(cil_dflt.image_format)-1);
fname4_out = fname4(1:end-length(cil_dflt.image_format)-1);

im1_crop = im1(idx_v, idx_h);
im2_crop = im2(idx_v, idx_h);
im3_crop = im3(idx_v, idx_h);
im4_crop = im4(idx_v, idx_h);



imwrite(im1_crop, [fname1_out, '_zoom.', cil_dflt.image_format]);
imwrite(im2_crop, [fname2_out, '_zoom.', cil_dflt.image_format]);
imwrite(im3_crop, [fname3_out, '_zoom.', cil_dflt.image_format]);
imwrite(im4_crop, [fname4_out, '_zoom.', cil_dflt.image_format]);

